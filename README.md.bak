# JPaint
Java Paint Application

Bugs:

1. Clicking redo() after group will result in multiple selectable objects.

2. Clicking undo() on an object, that has not been moved, will move the object.


Design Patterns:

1. Builder pattern: For creating shapes. Classes / Interfaces involved = Shape, ShapeBuilder, IShape, IBuilder.

2. Strategy pattern: For getting colors from ShapeColor. Classes / Interfaces involved = ShapeColor, IColorStrategy.

3. Command pattern: For creating commands after the mouse button is clicked. Classes / Interfaces involved = Mouse, MoveShapeCommand, SelectShapeCommand, AddShapeCommand, ICommand.

4. Singleton pattern: For calling PaintCanvas.repaint(). Classes / Interfaces involved = PaintCanvas.

5. Null object pattern: To prevent the client from getting NullPointException if client implements IShape and does not implement getActiveShapeType() and getActiveShapeShadingType(). Classes / Interfaces involved = NullShapeBehaviors, Shape, IShape. 

6. Composite pattern: For group() and unGroup() so that both shapes and groups of shapes are treated the same. Classes / Interfaces involved = GroupShapes, Shape, IShape. 
